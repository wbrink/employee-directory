{"version":3,"sources":["SearchContext.js","components/Search/index.js","components/EmployeeList/index.js","App.js","serviceWorker.js","index.js"],"names":["SearchContext","createContext","Search","props","useContext","setSearch","search","className","htmlFor","type","id","onChange","e","console","log","target","value","EmployeeList","useState","employees","setEmployees","name","department","salary","sorted","setSorted","nameSort","setNameSort","deptSort","setdeptSort","salarySort","setSalarySort","sortName","Array","from","sort","a","b","toLowerCase","sortDepartment","sortSalary","useEffect","data","scope","onClick","class","width","height","viewBox","fill","xmlns","d","map","el","startsWith","App","Provider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"6uBAMeA,G,MAHOC,wBAAc,K,MCCrB,SAASC,EAAOC,GAAQ,IAAD,EAERC,qBAAWJ,GAAxBK,GAFqB,EAE7BC,OAF6B,EAErBD,WAOf,OACE,yBAAKE,UAAU,QACb,2BAAOC,QAAQ,UAAf,eACA,2BAAOC,KAAK,OAAOC,GAAG,SAASC,SARd,SAACC,GACpBC,QAAQC,IAAIF,EAAEG,OAAOC,OACrBX,EAAUO,EAAEG,OAAOC,W,wBCLR,SAASC,EAAad,GAAQ,IAAD,EAEdC,qBAAWJ,GAAhCM,EAFmC,EAEnCA,OAFmC,KAE3BD,UACmBa,mBAAS,KAHD,mBAGnCC,EAHmC,KAGxBC,EAHwB,OAIdF,mBAAS,CACnCG,KAAM,SACNC,WAAY,SACZC,OAAQ,WAPgC,mBAInCC,EAJmC,KAI3BC,EAJ2B,OAWVP,oBAAS,GAXC,mBAWnCQ,EAXmC,KAWzBC,EAXyB,OAYVT,oBAAS,GAZC,mBAYnCU,EAZmC,KAYzBC,EAZyB,OAaNX,oBAAS,GAbH,mBAanCY,EAbmC,KAavBC,EAbuB,KAepCC,EAAW,WACfL,GAAY,GACZE,GAAY,GACZE,GAAc,GACK,UAAfP,EAAOH,MACTD,EAAaa,MAAMC,KAAKf,EAAUgB,MAAK,SAACC,EAAEC,GACxC,OAAID,EAAEf,KAAKiB,cAAgBD,EAAEhB,KAAKiB,eACxB,EACCF,EAAEf,KAAKiB,cAAgBD,EAAEhB,KAAKiB,cAChC,EAEA,OAGXb,EAAU,2BAAID,GAAL,IAAaH,KAAM,eAE5BD,EAAaa,MAAMC,KAAKf,EAAUgB,MAAK,SAACC,EAAEC,GACxC,OAAID,EAAEf,KAAKiB,cAAgBD,EAAEhB,KAAKiB,eACxB,EACCF,EAAEf,KAAKiB,cAAgBD,EAAEhB,KAAKiB,cAChC,EAEA,OAGXb,EAAU,2BAAID,GAAL,IAAaH,KAAM,cAK1BkB,EAAiB,WACrBV,GAAY,GACZF,GAAY,GACZI,GAAc,GACW,UAArBP,EAAOF,YACTF,EAAaa,MAAMC,KAAKf,EAAUgB,MAAK,SAACC,EAAEC,GACxC,OAAID,EAAEd,WAAWgB,cAAgBD,EAAEf,WAAWgB,eACpC,EACCF,EAAEd,WAAWgB,cAAgBD,EAAEf,WAAWgB,cAC5C,EAEA,OAGXb,EAAU,2BAAID,GAAL,IAAaF,WAAY,eAElCF,EAAaa,MAAMC,KAAKf,EAAUgB,MAAK,SAACC,EAAEC,GACxC,OAAID,EAAEd,WAAWgB,cAAgBD,EAAEf,WAAWgB,eACpC,EACCF,EAAEd,WAAWgB,cAAgBD,EAAEf,WAAWgB,cAC5C,EAEA,OAGXb,EAAU,2BAAID,GAAL,IAAaF,WAAY,cAKhCkB,EAAa,WACjBT,GAAc,GACdF,GAAY,GACZF,GAAY,GACS,UAAjBH,EAAOD,QACTH,EAAaa,MAAMC,KAAKf,EAAUgB,MAAK,SAACC,EAAEC,GACxC,OAAID,EAAEb,OAASc,EAAEd,QACP,EACCa,EAAEb,OAASc,EAAEd,OACf,EAEA,OAGXE,EAAU,2BAAID,GAAL,IAAaD,OAAQ,eAE9BH,EAAaa,MAAMC,KAAKf,EAAUgB,MAAK,SAACC,EAAEC,GACxC,OAAID,EAAEb,OAASc,EAAEd,QACP,EACCa,EAAEb,OAASc,EAAEd,OACf,EAEA,OAGXE,EAAU,2BAAID,GAAL,IAAaD,OAAQ,cASlC,OAJAkB,qBAAU,WACRrB,EAAaa,MAAMC,KAAKQ,MACvB,IAGD,2BAAOnC,UAAU,SACf,+BACE,6BAGgB,IAAbmB,EACG,wBAAIiB,MAAM,MAAMC,QAASZ,GAAzB,QACe,UAAfR,EAAOH,KACL,wBAAIsB,MAAM,MAAMC,QAASZ,GAAzB,QAAwC,yBAAKa,MAAM,sBAAsBC,MAAM,MAAMC,OAAO,MAAMC,QAAQ,YAAYC,KAAK,eAAeC,MAAM,8BAA6B,0BAAMC,EAAE,wHACrL,wBAAIR,MAAM,MAAMC,QAASZ,GAAzB,QAAwC,yBAAKa,MAAM,wBAAwBC,MAAM,MAAMC,OAAO,MAAMC,QAAQ,YAAYC,KAAK,eAAeC,MAAM,8BAA6B,0BAAMC,EAAE,sHAG/K,IAAbvB,EACG,wBAAIe,MAAM,MAAMC,QAASL,GAAzB,cACqB,UAArBf,EAAOF,WACL,wBAAIqB,MAAM,MAAMC,QAASL,GAAzB,cAAoD,yBAAKM,MAAM,sBAAsBC,MAAM,MAAMC,OAAO,MAAMC,QAAQ,YAAYC,KAAK,eAAeC,MAAM,8BAA6B,0BAAMC,EAAE,wHACjM,wBAAIR,MAAM,MAAMC,QAASL,GAAzB,cAAoD,yBAAKM,MAAM,wBAAwBC,MAAM,MAAMC,OAAO,MAAMC,QAAQ,YAAYC,KAAK,eAAeC,MAAM,8BAA6B,0BAAMC,EAAE,sHAGzL,IAAfrB,EACG,wBAAIa,MAAM,MAAMC,QAASJ,GAAzB,UACiB,UAAjBhB,EAAOD,OACL,wBAAIoB,MAAM,MAAMC,QAASJ,GAAzB,UAA4C,yBAAKK,MAAM,sBAAsBC,MAAM,MAAMC,OAAO,MAAMC,QAAQ,YAAYC,KAAK,eAAeC,MAAM,8BAA6B,0BAAMC,EAAE,wHACzL,wBAAIR,MAAM,MAAMC,QAASJ,GAAzB,UAA4C,yBAAKK,MAAM,wBAAwBC,MAAM,MAAMC,OAAO,MAAMC,QAAQ,YAAYC,KAAK,eAAeC,MAAM,8BAA6B,0BAAMC,EAAE,uHAKrM,+BACc,IAAV7C,EAAea,EAAUiC,KAAI,SAAAC,GAAO,OAAQ,4BAAI,4BAAKA,EAAGhC,MAAU,4BAAKgC,EAAG/B,YAAgB,4BAAK+B,EAAG9B,YAChGJ,EAAUiC,KAAI,SAAAC,GACd,GAAIA,EAAGhC,KAAKiB,cAAcgB,WAAWhD,EAAOgC,eAC1C,OACE,4BACE,4BAAKe,EAAGhC,MACR,4BAAKgC,EAAG/B,YACR,4BAAK+B,EAAG9B,cC7HXgC,MApBf,WAAgB,IAAD,EAEerC,mBAAS,IAFxB,mBAENZ,EAFM,KAEED,EAFF,KAIb,OACE,kBAAC,EAAcmD,SAAf,CAAwBxC,MAAO,CAACV,SAAQD,cACtC,yBAAKE,UAAU,OACb,gCACE,mDAGF,kBAACL,EAAD,MACA,kBAACe,EAAD,SCNYwC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL7D,QAAQ6D,MAAMA,EAAMC,c","file":"static/js/main.9f5392a7.chunk.js","sourcesContent":["import React, {createContext} from \"react\";\r\n\r\n\r\nconst SearchContext = createContext(\"\");\r\n\r\n\r\nexport default SearchContext;","import React, {useContext} from \"react\";\r\nimport SearchContext from \"../../SearchContext\";\r\nimport \"./style.css\";\r\n\r\nexport default function Search(props) {\r\n\r\n  const {search, setSearch} = useContext(SearchContext);\r\n\r\n  const handleChange = (e) => {\r\n    console.log(e.target.value);\r\n    setSearch(e.target.value);\r\n  }\r\n  \r\n  return (\r\n    <div className=\"form\">\r\n      <label htmlFor=\"search\">Search Name</label>\r\n      <input type=\"text\" id=\"search\" onChange={handleChange}/>\r\n    </div>\r\n    \r\n  )\r\n}","import React, {useContext, useState, useEffect} from \"react\";\r\nimport SearchContext from \"../../SearchContext\";\r\nimport data from \"../../employees.json\";\r\nimport \"./style.css\";\r\n\r\nexport default function EmployeeList(props) {\r\n  \r\n  const {search, setSearch} = useContext(SearchContext);\r\n  const [employees, setEmployees] = useState([]);\r\n  const [sorted, setSorted] = useState({\r\n    name: \"ascend\",\r\n    department: \"ascend\",\r\n    salary: \"ascend\"\r\n  })\r\n\r\n  // if they were clicked to sort\r\n  const [nameSort, setNameSort] = useState(false);\r\n  const [deptSort, setdeptSort] = useState(false);\r\n  const [salarySort, setSalarySort] = useState(false);\r\n\r\n  const sortName = () => {\r\n    setNameSort(true);\r\n    setdeptSort(false);\r\n    setSalarySort(false);\r\n    if (sorted.name == \"ascend\") {\r\n      setEmployees(Array.from(employees.sort((a,b) => {\r\n        if (a.name.toLowerCase() < b.name.toLowerCase()) {\r\n          return -1;\r\n        } else if (a.name.toLowerCase() > b.name.toLowerCase()) {\r\n          return 1;\r\n        } else {\r\n          return 0;\r\n        }\r\n      })));\r\n      setSorted({...sorted, name: \"descend\"});\r\n    } else {\r\n      setEmployees(Array.from(employees.sort((a,b) => {\r\n        if (a.name.toLowerCase() > b.name.toLowerCase()) {\r\n          return -1;\r\n        } else if (a.name.toLowerCase() < b.name.toLowerCase()) {\r\n          return 1;\r\n        } else {\r\n          return 0;\r\n        }\r\n      })));\r\n      setSorted({...sorted, name: \"ascend\"});\r\n    }\r\n    \r\n  }\r\n\r\n  const sortDepartment = () => {\r\n    setdeptSort(true);\r\n    setNameSort(false);\r\n    setSalarySort(false);\r\n    if (sorted.department == \"ascend\") {\r\n      setEmployees(Array.from(employees.sort((a,b) => {\r\n        if (a.department.toLowerCase() < b.department.toLowerCase()) {\r\n          return -1;\r\n        } else if (a.department.toLowerCase() > b.department.toLowerCase()) {\r\n          return 1;\r\n        } else {\r\n          return 0;\r\n        }\r\n      })));\r\n      setSorted({...sorted, department: \"descend\"});\r\n    } else {\r\n      setEmployees(Array.from(employees.sort((a,b) => {\r\n        if (a.department.toLowerCase() > b.department.toLowerCase()) {\r\n          return -1;\r\n        } else if (a.department.toLowerCase() < b.department.toLowerCase()) {\r\n          return 1;\r\n        } else {\r\n          return 0;\r\n        }\r\n      })));\r\n      setSorted({...sorted, department: \"ascend\"});\r\n    }\r\n    \r\n  }\r\n\r\n  const sortSalary = () => {\r\n    setSalarySort(true);\r\n    setdeptSort(false);\r\n    setNameSort(false);\r\n    if (sorted.salary == \"ascend\") {\r\n      setEmployees(Array.from(employees.sort((a,b) => {\r\n        if (a.salary < b.salary) {\r\n          return -1;\r\n        } else if (a.salary > b.salary) {\r\n          return 1;\r\n        } else {\r\n          return 0;\r\n        }\r\n      })))\r\n      setSorted({...sorted, salary: \"descend\"})\r\n    } else {\r\n      setEmployees(Array.from(employees.sort((a,b) => {\r\n        if (a.salary > b.salary) {\r\n          return -1;\r\n        } else if (a.salary < b.salary) {\r\n          return 1;\r\n        } else {\r\n          return 0;\r\n        }\r\n      })))\r\n      setSorted({...sorted, salary: \"ascend\"})\r\n    }\r\n    \r\n  }\r\n\r\n  useEffect(() => {\r\n    setEmployees(Array.from(data));\r\n  }, [])\r\n\r\n  return(\r\n    <table className=\"table\">\r\n      <thead>\r\n        <tr>\r\n\r\n\r\n          {nameSort === false \r\n            ? <th scope=\"col\" onClick={sortName}>Name</th>\r\n            : sorted.name == \"ascend\"\r\n              ? <th scope=\"col\" onClick={sortName}>Name <svg class=\"bi bi-caret-up-fill\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M7.247 4.86l-4.796 5.481c-.566.647-.106 1.659.753 1.659h9.592a1 1 0 0 0 .753-1.659l-4.796-5.48a1 1 0 0 0-1.506 0z\"/></svg></th> \r\n              : <th scope=\"col\" onClick={sortName}>Name <svg class=\"bi bi-caret-down-fill\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M7.247 11.14L2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z\"/></svg></th>\r\n          }  \r\n\r\n          {deptSort === false \r\n            ? <th scope=\"col\" onClick={sortDepartment}>Department</th>\r\n            : sorted.department == \"ascend\"\r\n              ? <th scope=\"col\" onClick={sortDepartment}>Department <svg class=\"bi bi-caret-up-fill\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M7.247 4.86l-4.796 5.481c-.566.647-.106 1.659.753 1.659h9.592a1 1 0 0 0 .753-1.659l-4.796-5.48a1 1 0 0 0-1.506 0z\"/></svg></th> \r\n              : <th scope=\"col\" onClick={sortDepartment}>Department <svg class=\"bi bi-caret-down-fill\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M7.247 11.14L2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z\"/></svg></th>\r\n          }  \r\n\r\n          {salarySort === false \r\n            ? <th scope=\"col\" onClick={sortSalary}>Salary</th>\r\n            : sorted.salary == \"ascend\"\r\n              ? <th scope=\"col\" onClick={sortSalary}>Salary <svg class=\"bi bi-caret-up-fill\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M7.247 4.86l-4.796 5.481c-.566.647-.106 1.659.753 1.659h9.592a1 1 0 0 0 .753-1.659l-4.796-5.48a1 1 0 0 0-1.506 0z\"/></svg></th> \r\n              : <th scope=\"col\" onClick={sortSalary}>Salary <svg class=\"bi bi-caret-down-fill\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M7.247 11.14L2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z\"/></svg></th>\r\n          }  \r\n            \r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        { search == \"\" ? employees.map(el => {return (<tr><td>{el.name}</td><td>{el.department}</td><td>{el.salary}</td></tr>) }) \r\n          : employees.map(el => {\r\n            if (el.name.toLowerCase().startsWith(search.toLowerCase())) {\r\n              return (\r\n                <tr>\r\n                  <td>{el.name}</td>\r\n                  <td>{el.department}</td>\r\n                  <td>{el.salary}</td>\r\n                </tr>\r\n              )\r\n            }\r\n          })\r\n\r\n        }\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\n","import React, {useState, useEffect, useContext, createContext} from 'react';\nimport './App.css';\nimport Search from './components/Search';\nimport EmployeeList from './components/EmployeeList';\nimport SearchContext from \"./SearchContext\";\n\nfunction App() {\n\n  const [search, setSearch] = useState(\"\");\n\n  return (\n    <SearchContext.Provider value={{search, setSearch}}>\n      <div className=\"App\">\n        <header>\n          <h1>Employee Directory</h1>\n        </header>\n\n        <Search />\n        <EmployeeList />\n      </div>\n\n    </SearchContext.Provider>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}